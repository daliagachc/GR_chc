splined_fun(c(1,2,3),deriv=1)
splined_fun(c(1,2,3),deriv=1)/1e-9
splined_fun(c(1,2,3),deriv=1)/3600
splined_fun(c(1,2,3),deriv=1)/3600*1e-9
splined_fun(c(1,2,3),deriv=1)
splined_fun(c(1,2,3,4),deriv=1)
splined_fun(c(1,2,3,4))
splined_fun(timelist[[1]])
splined_fun(timelist[[i]])
splined_fun(timelist[[i]],deriv=1)
splined_fun(timelist[[i]],deriv=1)*3600
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(wd)
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
smooth.spline
?smooth.spline
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
?splined.smooth_fun
?smooth.spline
test=smooth.spline(x=c(1,2,3),y=c(2,3,4))
test=smooth.spline(x=c(1,2,3,5),y=c(2,3,4,6))
test
str(test)
test$x
test$y
test=smooth.spline(c(1.1,2.5,1.8,2),c(1.6,7.2,5,10))
test$x
test$yin
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(test)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(splined.smooth_fun)
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
filtered.trayectories.df=do.call("rbind",filtered.trayectories)
test=subset(filtered.trayectories.df,eventID=="Neg100")
ggplot(data=test)+
geom_line(aes(x=posixTime,y=unfiltered,group=eventID))+
geom_line(aes(x=posixTime,y=filtered,group=eventID),col="red")+
geom_line(aes(x=posixTime,y=splined.smoothed.y,group=eventID),col="blue")
?splined.smooth
?smooth.spline
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
str(filtered.trayectories.df)
View(test)
plot(test$posixTime,test$splined.smoothed.der)
plot(test$posixTime,test$splined.smoothed.der,test$posixTime,test$filtered_der)
plot(test$posixTime,test$filtered_der)
test=event_GR_wide
test=subset(test,eventID=="Neg100")
test
test2=event_GR_wide
test2=subset(test2,eventID=="Neg100")
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
View(test)
View(test2)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$filtered_der)
plot(test$posixTime,test$splined.smoothed.der)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der)
plot(test$posixTime,test$filtered.der)
str(test)
filtered.trayectories.df=do.call("rbind",filtered.trayectories)
test=subset(filtered.trayectories.df,eventID=="Pos93")
ggplot(data=test)+
geom_line(aes(x=posixTime,y=unfiltered,group=eventID))+
geom_line(aes(x=posixTime,y=filtered,group=eventID),col="red")+
geom_line(aes(x=posixTime,y=splined.smoothed,group=eventID),col="blue")
str(test)
plot(test$posixTime,test$filtered_der)
plot(test$posixTime,test$splined_der)
plot(test$posixTime,test$splined.smoothed.der)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der)
str(test)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask=event_GR_long %>%select(eventID,R)
mask=subset(mask,R>=0.75)
mask=unique(mask)
help=npfevent_size_frame %>%
dplyr::group_by(eventID)%>%
dplyr::summarise(eventStart=min(posixTime),
begin.hour=hour(min(posixTime)))
workData=merge(npfevent_size_frame,help,by="eventID") %>%
mutate(timeSinceStart=(as.numeric(posixTime)-as.numeric(eventStart))/3600,
begin.hour.cut=cut(begin.hour,breaks=c(7,9,11,15),include.lowest=T))
mask2=eventIDclas %>%
dplyr::filter(score10 >=5 & airChange ==0) %>%
select(eventID)
workData=merge(workData,mask2,by="eventID") %>%
select(eventID,posixTime,dp,ion)
# workData=subset(workData,eventID=="Neg89") %>%
#   arrange(posixTime)
#
# test=smooth.spline(workData$posixTime,workData$dp)
# test=sgolayfilt(workData$dp,p=1,n=5)
# testabs=sgolayfilt(workData$dp,p=2,n=5,m=1)
#
# test=splinefun(workData$posixTime,workData$dp)
#
# x=workData$posixTime
# y=test(x)
# z=test(x,deriv=1)
# test2=data.frame(x=workData$posixTime,y=test,z=testabs)
ID=c()
timelist=list()
veclist=list()
derlist=list()
splined_fun=list()
filtered.trayectories=list()
for (i in 1:length(unique(workData$eventID))){
ID[i]=as.character(unique(workData$eventID)[i])
help=subset(workData,eventID==ID[i]) %>%
arrange(posixTime)
unfiltered=help$dp
timelist[[i]]=help$posixTime
splined_fun=splinefun(timelist[[i]],unfiltered)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.8)
veclist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=0,ts=0)
derlist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=1,ts=0)
filtered.trayectories[[i]]=data.frame(eventID=rep(ID[i],length(veclist[[i]])),
posixTime=timelist[[i]],
unfiltered=unfiltered,
filtered=veclist[[i]],
filtered_der=derlist[[i]],
splined=splined_fun(timelist[[i]]),
splined.der=splined_fun(timelist[[i]],deriv=1)*3600,
splined.smoothed=predict(splined.smooth_fun,
as.numeric(timelist[[i]])),
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1)*3600)
}
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask=event_GR_long %>%select(eventID,R)
mask=subset(mask,R>=0.75)
mask=unique(mask)
help=npfevent_size_frame %>%
dplyr::group_by(eventID)%>%
dplyr::summarise(eventStart=min(posixTime),
begin.hour=hour(min(posixTime)))
workData=merge(npfevent_size_frame,help,by="eventID") %>%
mutate(timeSinceStart=(as.numeric(posixTime)-as.numeric(eventStart))/3600,
begin.hour.cut=cut(begin.hour,breaks=c(7,9,11,15),include.lowest=T))
mask2=eventIDclas %>%
dplyr::filter(score10 >=5 & airChange ==0) %>%
select(eventID)
workData=merge(workData,mask2,by="eventID") %>%
select(eventID,posixTime,dp,ion)
# workData=subset(workData,eventID=="Neg89") %>%
#   arrange(posixTime)
#
# test=smooth.spline(workData$posixTime,workData$dp)
# test=sgolayfilt(workData$dp,p=1,n=5)
# testabs=sgolayfilt(workData$dp,p=2,n=5,m=1)
#
# test=splinefun(workData$posixTime,workData$dp)
#
# x=workData$posixTime
# y=test(x)
# z=test(x,deriv=1)
# test2=data.frame(x=workData$posixTime,y=test,z=testabs)
ID=c()
timelist=list()
veclist=list()
derlist=list()
splined_fun=list()
filtered.trayectories=list()
for (i in 1:length(unique(workData$eventID))){
ID[i]=as.character(unique(workData$eventID)[i])
help=subset(workData,eventID==ID[i]) %>%
arrange(posixTime)
unfiltered=help$dp
timelist[[i]]=help$posixTime
splined_fun=splinefun(timelist[[i]],unfiltered)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.8)
veclist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=0,ts=0)
derlist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=1,ts=0)
filtered.trayectories[[i]]=data.frame(eventID=rep(ID[i],length(veclist[[i]])),
posixTime=timelist[[i]],
unfiltered=unfiltered,
filtered=veclist[[i]],
filtered_der=derlist[[i]],
splined=splined_fun(timelist[[i]]),
splined.der=splined_fun(timelist[[i]],deriv=1)*3600,
splined.smoothed=predict(splined.smooth_fun,
as.numeric(timelist[[i]]))$y,
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1)$y*3600)
}
mask=event_GR_long %>%select(eventID,R)
mask=subset(mask,R>=0.75)
mask=unique(mask)
help=npfevent_size_frame %>%
dplyr::group_by(eventID)%>%
dplyr::summarise(eventStart=min(posixTime),
begin.hour=hour(min(posixTime)))
workData=merge(npfevent_size_frame,help,by="eventID") %>%
mutate(timeSinceStart=(as.numeric(posixTime)-as.numeric(eventStart))/3600,
begin.hour.cut=cut(begin.hour,breaks=c(7,9,11,15),include.lowest=T))
mask2=eventIDclas %>%
dplyr::filter(score10 >=5 & airChange ==0) %>%
select(eventID)
workData=merge(workData,mask2,by="eventID") %>%
select(eventID,posixTime,dp,ion)
# workData=subset(workData,eventID=="Neg89") %>%
#   arrange(posixTime)
#
# test=smooth.spline(workData$posixTime,workData$dp)
# test=sgolayfilt(workData$dp,p=1,n=5)
# testabs=sgolayfilt(workData$dp,p=2,n=5,m=1)
#
# test=splinefun(workData$posixTime,workData$dp)
#
# x=workData$posixTime
# y=test(x)
# z=test(x,deriv=1)
# test2=data.frame(x=workData$posixTime,y=test,z=testabs)
ID=c()
timelist=list()
veclist=list()
derlist=list()
splined_fun=list()
filtered.trayectories=list()
for (i in 1:length(unique(workData$eventID))){
ID[i]=as.character(unique(workData$eventID)[i])
help=subset(workData,eventID==ID[i]) %>%
arrange(posixTime)
unfiltered=help$dp
timelist[[i]]=help$posixTime
splined_fun=splinefun(timelist[[i]],unfiltered)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.8)
veclist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=0,ts=0)
derlist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=1,ts=0)
filtered.trayectories[[i]]=data.frame(eventID=rep(ID[i],length(veclist[[i]])),
posixTime=timelist[[i]],
unfiltered=unfiltered,
filtered=veclist[[i]],
filtered_der=derlist[[i]],
splined=splined_fun(timelist[[i]]),
splined.der=splined_fun(timelist[[i]],deriv=1)*3600,
splined.smoothed=predict(splined.smooth_fun,
as.numeric(timelist[[i]])),
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1)$y*3600)
}
str(filtered.trayectories.df)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask=event_GR_long %>%select(eventID,R)
mask=subset(mask,R>=0.75)
mask=unique(mask)
help=npfevent_size_frame %>%
dplyr::group_by(eventID)%>%
dplyr::summarise(eventStart=min(posixTime),
begin.hour=hour(min(posixTime)))
workData=merge(npfevent_size_frame,help,by="eventID") %>%
mutate(timeSinceStart=(as.numeric(posixTime)-as.numeric(eventStart))/3600,
begin.hour.cut=cut(begin.hour,breaks=c(7,9,11,15),include.lowest=T))
mask2=eventIDclas %>%
dplyr::filter(score10 >=5 & airChange ==0) %>%
select(eventID)
workData=merge(workData,mask2,by="eventID") %>%
select(eventID,posixTime,dp,ion)
# workData=subset(workData,eventID=="Neg89") %>%
#   arrange(posixTime)
#
# test=smooth.spline(workData$posixTime,workData$dp)
# test=sgolayfilt(workData$dp,p=1,n=5)
# testabs=sgolayfilt(workData$dp,p=2,n=5,m=1)
#
# test=splinefun(workData$posixTime,workData$dp)
#
# x=workData$posixTime
# y=test(x)
# z=test(x,deriv=1)
# test2=data.frame(x=workData$posixTime,y=test,z=testabs)
ID=c()
timelist=list()
veclist=list()
derlist=list()
splined_fun=list()
filtered.trayectories=list()
for (i in 1:length(unique(workData$eventID))){
ID[i]=as.character(unique(workData$eventID)[i])
help=subset(workData,eventID==ID[i]) %>%
arrange(posixTime)
unfiltered=help$dp
timelist[[i]]=help$posixTime
splined_fun=splinefun(timelist[[i]],unfiltered)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.8)
veclist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=0,ts=0)
derlist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=1,ts=0)
filtered.trayectories[[i]]=data.frame(eventID=rep(ID[i],length(veclist[[i]])),
posixTime=timelist[[i]],
unfiltered=unfiltered,
filtered=veclist[[i]],
filtered_der=derlist[[i]],
splined=splined_fun(timelist[[i]]),
splined.der=splined_fun(timelist[[i]],deriv=1)*3600,
splined.smoothed=predict(splined.smooth_fun,
as.numeric(timelist[[i]])),
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1)*3600)
}
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1)
splined.smoothed.der
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der.y)
plot(test$posixTime,test$splined.smoothed.der.y*3600)
plot(test$unfiltered,test$splined.smoothed.der.y)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
test=subset(filtered.trayectories.df,eventID=="Pos67")
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask$eventID
mask$eventID[1]
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
as.character(mask$eventID[1])
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
as.character(mask$eventID[1])
plot(test$posixTime,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$posixTime,test$splined.smoothed.der.y*3600)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
splined.smoothed(c(1,2,3))
predict(splined.smoothed,c(1,2,3,4,5))
predict(splined.smooth_fun,c(1,2,3,4,5))
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
plot(test$unfiltered,test$splined.smoothed.der.y*3600)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
mask=event_GR_long %>%select(eventID,R)
mask=subset(mask,R>=0.75)
mask=unique(mask)
help=npfevent_size_frame %>%
dplyr::group_by(eventID)%>%
dplyr::summarise(eventStart=min(posixTime),
begin.hour=hour(min(posixTime)))
workData=merge(npfevent_size_frame,help,by="eventID") %>%
mutate(timeSinceStart=(as.numeric(posixTime)-as.numeric(eventStart))/3600,
begin.hour.cut=cut(begin.hour,breaks=c(7,9,11,15),include.lowest=T))
mask2=eventIDclas %>%
dplyr::filter(score10 >=5 & airChange ==0) %>%
select(eventID)
workData=merge(workData,mask2,by="eventID") %>%
select(eventID,posixTime,dp,ion)
# workData=subset(workData,eventID=="Neg89") %>%
#   arrange(posixTime)
#
# test=smooth.spline(workData$posixTime,workData$dp)
# test=sgolayfilt(workData$dp,p=1,n=5)
# testabs=sgolayfilt(workData$dp,p=2,n=5,m=1)
#
# test=splinefun(workData$posixTime,workData$dp)
#
# x=workData$posixTime
# y=test(x)
# z=test(x,deriv=1)
# test2=data.frame(x=workData$posixTime,y=test,z=testabs)
ID=c()
timelist=list()
veclist=list()
derlist=list()
splined_fun=list()
filtered.trayectories=list()
for (i in 1:length(unique(workData$eventID))){
ID[i]=as.character(unique(workData$eventID)[i])
help=subset(workData,eventID==ID[i]) %>%
arrange(posixTime)
unfiltered=help$dp
timelist[[i]]=help$posixTime
splined_fun=splinefun(timelist[[i]],unfiltered)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.70)
veclist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=0,ts=0)
derlist[[i]]=sgolayfilt(unfiltered,p=1,n=3,m=1,ts=0)
filtered.trayectories[[i]]=data.frame(eventID=rep(ID[i],length(veclist[[i]])),
posixTime=timelist[[i]],
unfiltered=unfiltered,
ion=help$ion,
filtered=veclist[[i]],
filtered_der=derlist[[i]],
splined=splined_fun(timelist[[i]]),
splined.der=splined_fun(timelist[[i]],deriv=1)*3600,
splined.smoothed=predict(splined.smooth_fun,
as.numeric(timelist[[i]])),
splined.smoothed.der=predict(splined.smooth_fun,
as.numeric(timelist[[i]]),deriv=1))
}
filtered.trayectories.df=do.call("rbind",filtered.trayectories)
# test=subset(filtered.trayectories.df,eventID==as.character(mask2$eventID[5]))
str(filtered.trayectories.df)
test=filtered.trayectories.df %>%
mutate(sizeGroups=cut(unfiltered,breaks=c(0,3,7,20,60),include.lowest=T))
str(test)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
test
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
test
test2=filtered.trayectories.df %>%
mutate(sizeGroups=cut(unfiltered,breaks=c(0,3,7,20,60),include.lowest=T))
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion)
)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion))+
scale_y_continuous(limits=c(0,10))
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion),notch=T)+
scale_y_continuous(limits=c(0,14))
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion),notch=T)+
scale_y_continuous(limits=c(0,14),breaks=seq(0,14,2))
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion),
notch=T,outlier.shape="none")+
scale_y_continuous(limits=c(0,14),breaks=seq(0,14,2))
#
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion),
notch=T,outlier.shape=NULL)+
scale_y_continuous(limits=c(0,14),breaks=seq(0,14,2))
#
ggplot(data=test2)+
geom_boxplot(aes(x=sizeGroups,y=splined.smoothed.der.y*3600,col=ion),
notch=T,outlier.shape=NA)+
scale_y_continuous(limits=c(0,14),breaks=seq(0,14,2))
#
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
View(test2)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
splined.smooth_fun=smooth.spline(x=timelist[[i]],y=unfiltered,spar=0.30)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
View(test)
View(test2)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
source('C:/fastFiles/springCourse/R/GR_create_trayectories.R', echo=TRUE)
