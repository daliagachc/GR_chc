TGMs
TGMs=TGM_raster_stack[[1:12]]
TGMs=crop(TGMs,extent(shapefile))
TGMs=mask(TGMs,shapefile)
TGMs
surfaceTemps
TGMs=aggregate(TGMs,5)
TGMs
plot(TGMs)
test=TGMs*surfaceTemps
test
plot(test)
test=cor.test(surfaceTemps,TGMs)
# let's say we have two Raster objects with three layers
x <- surfaceTemps
y <- surfaceTemps
# stack these
z <- stack(x,y)
r <- calc(z, fun=function(x) cor(x[1:3], x[4:6], method='spearman'))
r
plot(r)
# let's say we have two Raster objects with three layers
x <- surfaceTemps
y <- TGMs
# stack these
z <- stack(x,y)
r <- calc(z, fun=function(x) cor(x[1:3], x[4:6], method='spearman'))
workData
workData=SSTn_SA_stack[[27:38]]
workData=aggregate(workData,24)
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=crop(workData,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
surfaceTemps
TGMs
shapefile
shapefile=extend(shapefile,extent(-80,-70,-29,-12)
)
TGMs
plot(TGMs)
surfaceTemps
workData=SSTn_SA_stack[[27:38]]
#workData=aggregate(workData,24)
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=crop(workData,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
surfaceTemps=aggregate(surfaceTemps,24)
surfaceTemps
TGMs
workData=SSTn_SA_stack[[27:38]]
workData=aggregate(workData,24)
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=aggregate(workData,24)
surfaceTemps=crop(workData,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
TGMs=aggregate(TGM_raster_stack[[1:12]],5)
TGMs=crop(TGMs,extent(shapefile))
TGMs=mask(TGMs,shapefile)
workData=SSTn_SA_stack[[27:38]]
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=aggregate(workData,24)
surfaceTemps=crop(workData,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
TGMs=aggregate(TGM_raster_stack[[1:12]],5)
TGMs=crop(TGMs,extent(shapefile))
TGMs=mask(TGMs,shapefile)
surfaceTemps
workData=SSTn_SA_stack[[27:38]]
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=aggregate(workData,24)
surfaceTemps
workData=SSTn_SA_stack[[27:38]]
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=aggregate(workData,24)
surfaceTemps=crop(workData,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
TGMs=aggregate(TGM_raster_stack[[1:12]],5)
TGMs=crop(TGMs,extent(shapefile))
TGMs=mask(TGMs,shapefile)
workData=SSTn_SA_stack[[27:38]]
#first loading the shape
help=getwd()
setwd("C:/fastFiles/MercuryChacaltaya/QGIS_geoinf/shapefiles")
shapefile <- readOGR(dsn= getwd(),layer = "maritime_shape")
setwd(help)
surfaceTemps=aggregate(workData,24)
surfaceTemps=crop(surfaceTemps,extent(shapefile))
surfaceTemps=mask(surfaceTemps,shapefile)
TGMs=aggregate(TGM_raster_stack[[1:12]],5)
TGMs=crop(TGMs,extent(shapefile))
TGMs=mask(TGMs,shapefile)
surfaceTemps
TGMs
# let's say we have two Raster objects with three layers
x <- surfaceTemps
y <- TGMs
# stack these
z <- stack(x,y)
r <- calc(z, fun=function(x) cor(x[1:3], x[4:6], method='spearman'))
r
plot(r)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'))
r
plot(r)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman',na.rm=T))
length(values(surfaceTemps))
length(values(TGMs))
cor.test(values(surfaceTemps),vaklues(TGMs))
cor.test(values(surfaceTemps),values(TGMs))
plot(values(surfaceTemps),values(TGMs))
#now, doing the correlation
cor.test(values(TGMs),values(TGMs))
#now, doing the correlation
cor.test(values(TGMs),values(surfaceTemps))
corrframe=data.frame(x=values(TGMs),y=values(surfaceTemps))
View(corrframe)
values(TGMs)
str(values(TGMs))
values(TGMs[[1]])
length(values(TGMs[[1]]))
length(values(TGMs[[1]]))'12'
length(values(TGMs[[1]]))*12
as.numeric(values(TGMs))
corrframe=data.frame(x=as.numeric(values(TGMs)(),y=as.numeric(values(surfaceTemps)))
corrframe=data.frame(x=as.numeric(values(TGMs)),y=as.numeric(values(surfaceTemps)))
corrframe=data.frame(x=as.numeric(values(TGMs)),y=as.numeric(values(surfaceTemps)))
nrow(corrframe)
View(corrframe)
corrframe=na.omit(corrframe)
plot(corrframe$x,corrframe$y)
plot(corrframe$y,corrframe$x)
ggplot(data=corrframe,aes(x=x,y=y))+
geom_point()+
geom_smooth(method="lm")
cor.test(corrframe$x,corrframe$y)
cor.test(values(TGMs),values(surfaceTemps))
plot(values(TGMs),values(surfaceTemps))
plot(corrframe$y,corrframe$x)
?values
# let's say we have two Raster objects with three layers
x <- surfaceTemps
y <- TGMs
# stack these
z <- stack(x,y)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'))
plot(r)
x=values(surfaceTemps)
y=values(TGMs)
x
y
x[1]
x[2]
cor.test(x,y)
x=values(surfaceTemps[[1]])
y=values(TGMs[[1]])
cor.test(x,y)
x=values(surfaceTemps[[2]])
y=values(TGMs[[2]])
cor.test(x,y)
x=values(surfaceTemps[[3]])
y=values(TGMs[[3]])
cor.test(x,y)
x=values(surfaceTemps)
y=values(TGMs)
cor.test(x,y)
cor.test(as.numeric(x),y)
cor.test(as.numeric(x),as.numeric(y))
as.numeric(x)
x
?cor
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),na.rm=T)
# let's say we have two Raster objects with three layers
x <- surfaceTemps
y <- TGMs
# stack these
z <- stack(x,y)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),na.rm=T)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),na.rm=F)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),
use="pairwise.complete.obs")
plot(r)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),
use="all.obs")
r
plot(r)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),
use="everything")
plot(r)
r <- calc(z, fun=function(x) cor(x[1:12], x[13:24], method='spearman'),
use="na.or.complete")
plot(r)
?cor.test
x=c(0,NA,3)
y=c(NA,2,3)
cor.test(x,y)
x=c(x,8,9)
y=c(y,8,9)
cor.test(x,y)
x
y
r <- calc(z, fun=function(x) cor.test(x[1:12], x[13:24])$estimate)
?cor
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
length(x)
length()
length()y
length(y)
cor.test(x,y)
plot(x,y)
plot(y,x)
x
y
cor.test(x,y)
plot(surfaceTemps[[10]])
plot(TGMs[[10]])
plot(TGMs[[1]])
plot(TGMs[[11]])
plot(TGMs[[12]])
plot(TGMs[[1]])
plot(TGMs)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
cor.test(x,y,)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if !(i %in% c(10,12)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y,)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if !(i %in% c(10,12)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% c(10,12)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% c(1,2,3,4,5,6,7,8,9,11)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
plot(x,y)
corrframe(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth
corrframe(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth()
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth()
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take, I ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,10,11,12)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take, I ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,10,11,12)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take, I ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,11)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths)){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
source('~/.active-rstudio-document', echo=TRUE)
#months to take, I ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,11)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#
# means=c()
# for (i in 1:nlayers(surfaceTemps)){
#   means[i]=mean(values(surfaceTemps[[i]]),na.rm=T)
# }
#
# test= shaped_frame_noDup %>%
#   dplyr::group_by(yearMonth) %>%
#months to take, I ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,10,11,12)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take,
#I can ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,10,11,12)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take,
#I can ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,11)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
#months to take,
#I can ignore april and june due to probably local contamination
takemonths=c(1,2,3,4,5,6,7,8,9,10,11)
x=c()
y=c()
for (i in 1:nlayers(surfaceTemps)){
if (i %in% takemonths){
x=c(x,values(surfaceTemps[[i]]))
y=c(y,values(TGMs[[i]]))
}
}
cor.test(x,y)
corrframe=data.frame(temp=x,TGM=y)
ggplot(data=corrframe,aes(x=temp,y=TGM))+
geom_point()+
geom_smooth(method="lm")
source('C:/fastFiles/MercuryChacaltaya/RCode/plotting/TGM_titicaca_shape.R', echo=TRUE)
surf_means=c()
for (i in 1:nlayers(surfaceTemps)){
surf_means=c(surf_means,mean(values(surfaceTemps[[i]])))
}
plot(surf_means)
surf_means
surf_means=c()
for (i in 1:nlayers(surfaceTemps)){
surf_means=c(surf_means,mean(values(surfaceTemps[[i]]),na.rm=T))
}
plot(surf_means)
tgm_means=c()
for (k %in% unique(test1$yearMonth)){
tgm_means=c(tgm_means,mean(test1$GEM_corrected),na.rm=T)
}
test1=shaped_frame_noDup
surf_means=c()
for (i in 1:nlayers(surfaceTemps)){
surf_means=c(surf_means,mean(values(surfaceTemps[[i]]),na.rm=T))
}
tgm_means=c()
for (k %in% unique(test1$yearMonth)){
tgm_means=c(tgm_means,mean(test1$GEM_corrected),na.rm=T)
}
source('C:/fastFiles/MercuryChacaltaya/RCode/dataUploadAndFormat/SSTn_TGM_correlation_maritime.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(surf_means)
plot(tgm_means)
shaped_frame_noDup
source('C:/fastFiles/MercuryChacaltaya/RCode/dataUploadAndFormat/TGM_maritime_shape.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tgm_means=c()
for (k in unique(test1$yearMonth)){
help=subset(test1,yearMonth==k)
tgm_means=c(tgm_means,mean(help$GEM_corrected),na.rm=T)
}
tgm_means
unique(test1$yearMonth)
tgm_means=c()
for (k in unique(test1$yearMonth)){
help=subset(test1,yearMonth==k)
tgm_means=c(tgm_means,mean(help$GEM_corrected,na.rm=T))
}
plot(tgm_means)
plot(surf_means)
cor.test(tgm_means,surf_means)
source('C:/fastFiles/MercuryChacaltaya/RCode/plotting/TGM_titicaca_shape.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cor.test(tgm_means,surf_means)
source('C:/fastFiles/MercuryChacaltaya/RCode/plotting/TGM_lowlands_shape.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cor.test(tgm_means,surf_means)
plot(tgm_means)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
source('C:/fastFiles/MercuryChacaltaya/RCode/dataUploadAndFormat/librariesAndGlobalFunctions.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
SO2_data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
SO2_data_cycle
head(part_data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
